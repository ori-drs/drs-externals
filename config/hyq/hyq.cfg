INCLUDE = [ "multisense_hyq.cfg",
            "state_estimator.cfg",
            "state_correction.cfg"];


coordinate_frames {
  root_frame = "local";
  
  # this is the pelvis/trunk/base link
  body {
    relative_to = "local";
    history = 2000;
    max_frequency = 1000;
    pose_update_channel = "POSE_BODY";
    updated = true;
    initial_transform{
      translation = [ 0, 0, 0 ];
      rpy = [0, 0, 0];
    }
  }

  # legacy frame used in director and maps in a few places
  utorso {
    relative_to = "body";
    history = 2000;
    max_frequency = 10;
    update_channel = "BODY_TO_UTORSO";
    initial_transform{
      translation = [ 0, 0, 0 ];
      quat = [ 1, 0, 0, 0 ];
    }
  }
  
  # Location of the head root w.r.t. the body
  head {
    relative_to = "body";
    history = 2000;
    #max_frequency = 100;
    #update_channel = "BODY_TO_HEAD";  
    updated = false;
    initial_transform{
      translation = [ 0.741737, 0.0191395, 0.143229 ];
      #rpy = [-0.2, 32.8, -1.989320924];
      #rpy = [-0.2, 32.8, -1.989320924];
      rpy = [-0.2, 28.6, -1.989320924];
    }
  }  

  ins {
    relative_to = "body";
    history = 2000;
    # update_channel = "BODY_TO_IMU";  
    initial_transform {
       translation = [ 0.290, 0.000, 0.0999214 ]; # GX4 on hyq-green
      #translation = [ 0.2883998, 0.000, 0.0990324 ]; # GX3 on hyq-green
      # rpy = [ 0, 0, 0 ]; # GX3 or GX4 with imu-rotator in SL
      rpy = [ 0, -180, 0 ]; # GX3 on hyq-green with LCM direct driver
    }
  }  

  kvh {
    relative_to = "body";
    history = 2000;
    # update_channel = "BODY_TO_KVH";  
    initial_transform {
    translation = [ 0.352845, 0.0029, 0.0503678 ]; # KVH 1775 on hyq-green
    rpy = [ 0, -180, 0 ]; # GX3 on hyq-green with LCM direct driver
    }
  }


  # 4m Hokuyo URG-04LX (old style lidar)
  HOKUYO_SCAN {
    relative_to = "body";
    history = 2000;
    initial_transform{
      translation = [ 0.475, 0.000, -0.143 ];
      rpy = [ 180, 0.000, 0.000 ];
    }
  }

  
  # An alternative body frame, for comparison with POSE_BODY
  # when developing state estimation
  body_alt {
  #   this cannot change - its rigid
    relative_to = "local";
    history = 2000;
    pose_update_channel = "POSE_BODY_ALT";    
    initial_transform {
      translation = [ 0, 0, 0 ];
      rpy = [ 0, 0, 0 ];
   }
  }

  # this is the pelvis/trunk/base link
  body_logged {
    relative_to = "local";
    history = 2000;
    max_frequency = 1000;
    pose_update_channel = "POSE_BODY_LOGGED";
    #update_channel = "HEAD_TO_BODY";  
    initial_transform{
      translation = [ 0, 0, 0 ];
      rpy = [0, 0, 0];
    }
  }

  ground_truth {
    relative_to = "local";
    history = 2000;
    max_frequency = 1000;
    pose_update_channel = "POSE_GROUND_TRUTH";
    initial_transform{
      translation = [ 0, 0, 0 ];
      rpy = [0, 0, 0];
    }
  }

  ground_truth_rt {
    relative_to = "local";
    history = 2000;
    max_frequency = 1000;
    update_channel = "TRANSF_GROUND_TRUTH";
    initial_transform{
      translation = [ 0, 0, 0 ];
      rpy = [0, 0, 0];
    }
  }

  # HDL-32E mid-sized Velodyne
  velodyne {
    relative_to = "body";
    history = 2000;
    initial_transform {
      translation = [ 0.39, 0, 0.269 ];
      # mfallon, manual attempt to correct for pitch and roll
      rpy = [-0.25, -1.4500, 180.000 ];
    }
  }
  
 
  body_scanmatcher {
    # this cannot change - its rigid
    relative_to = "local";
    history = 2000;
    max_frequency = 100;
    pose_update_channel= "POSE_BODY_SCANMATCHER";
    initial_transform{
      translation=[ 0.0, 0.0, 0.0 ];
      rpy = [ 0.0, 0.0, 0.0 ];
    }
  }


}


planar_lidars {
  # Hokuyo URG-04LX
  HOKUYO_SCAN {
    viewer_color = [ 1.0, 0.0, 0.0 ]; # red
    max_range = 5.6;
    min_range = 0.02;
    frequency = 10;
    laser_type = "HOKUYO_URG";
    coord_frame = "HOKUYO_SCAN";
    lcm_channel = "HOKUYO_SCAN";
    surround_region = [0, 1000000];
    up_region = [-1,-1];
    down_region = [-1, -1];
    max_range_free_dist = 5.6;
  }


}


cameras {

}
