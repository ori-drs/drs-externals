
control{
  
  # Use these encoder offsets, updated after calibration
  # no need to include 16:27 here:
  # index 3 is the neck. 4.24 as of v.1.10 robot software
  encoder_offsets{
    active = "true";
    index = [2, 3, 23 , 24 , 25 , 26 , 27 , 28 , 29 , 16 , 17 , 18 , 19 , 20 , 21, 22];
    value = [-0.0017453, 0.04799655, 0,0,0,0,0,0,0,0,0,0,0,0,0,0];
  }
  
  filtering{
    # for alpha filtering:
    # out = alpha*out_prev + (1-alpha)*new
    
    joints{
      # none, kalman, backlash
      type = "kalman";

      index = [0,1,2,4,5,6,7,8,9,10,11,12,13,14,15]; # back and legs
      #index = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27]; # full robot

      # poorly tuned KF velocities, which work with control
      process_noise_pos = 0.01;
      process_noise_vel = 1e-5;
      observation_noise = 5e-4;

      # reasonable KF parameters that don't work with control
      #process_noise_pos = 0.02;
      #process_noise_vel = 0.001;
      #observation_noise = 0.0002; # lower tends output to observations

      # tuned backlash filter parameters
      #process_noise_pos = 0.02;
      #process_noise_vel = 0.0005;
      #observation_noise = 0.0002; # lower tends output to observations
      #backlash_alpha = 0.25; # alpha filter
      #backlash_crossing_time_max = 0.05; # expiry time of crossing fix (sec), IHMC said they used 30msec

      # Adjust the joint angles using the IHMC torque correction method
      # torque_adjustment is now set in state_estimator.legodo.torque_adjustment ONLY!

    }

    rotation_rate{
      # none, alpha
      type = "alpha";
      alpha = 0.95;
    }

  }
}
