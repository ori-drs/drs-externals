<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from husky.urdf.xacro               | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!--
Software License Agreement (BSD)

\file      husky.urdf.xacro
\authors   Paul Bovbel <pbovbel@clearpathrobotics.com>, Devon Ash <dash@clearpathrobotics.com>
\copyright Copyright (c) 2015, Clearpath Robotics, Inc., All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that
the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the
   following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
   following disclaimer in the documentation and/or other materials provided with the distribution.
 * Neither the name of Clearpath Robotics nor the names of its contributors may be used to endorse or promote
   products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WAR-
RANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, IN-
DIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<robot name="husky_robot" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Included URDF/XACRO Files -->
  <!-- Include the 2D Hokuyo and SICK LMS511, added by gtinchev -->
  <!-- <xacro:include filename="$(find husky_description_rpg)/urdf/accessories/sick_lms1xx_mount.urdf.xacro"/> -->
  <!-- Head Link Simplified Collision Mesh -->
  <link name="head_root"/>
  <joint name="head_root_joint" type="fixed">
    <parent link="head_root"/>
    <child link="head"/>
  </joint>
  <link name="head">
    <inertial>
      <!-- <origin rpy="0 0 0" xyz="-0.075493 3.3383E-05 0.02774"/> -->
      <!-- <mass value="1.41984"/> -->
      <!--<inertia iyy="0.0041178" ixy="-1.5797E-06" iyz="-6.8415E-07" ixx="0.0039688" ixz="-0.00089293" izz="0.0035243" />-->
      <!-- <inertia ixx="0.0036053766" ixy="-1.5797E-06" ixz="-0.00089293" iyy="0.002080106" iyz="-6.8415E-04" izz="0.001782985"/> -->
      <!-- Simulation only -->
      <mass value="0.000004"/>
      <inertia ixx="1.5e-2" ixy="0.0" ixz="0.0" iyy="1.5e-2" iyz="0.0" izz="1.5e-2"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://multisense_sl/meshes/head.dae"/>
      </geometry>
      <material name="">
        <color rgba="0.9098 0.44314 0.031373 1"/>
      </material>
    </visual>
    <collision group="default">
      <origin rpy="0 0 0" xyz="-0.0503 0 -0.00195"/>
      <geometry>
        <box size="0.1311 0.12 0.0591"/>
      </geometry>
      <surface>
        <bounce restitution_coefficient="1.0" threshold="0.01"/>
      </surface>
    </collision>
    <collision group="other">
      <origin rpy="0 0 0" xyz="-0.093 0 0.0868"/>
      <geometry>
        <box size="0.0468 0.12 0.1184"/>
      </geometry>
    </collision>
  </link>
  <link name="hokuyo_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.012428 0.0004084 -0.0041835"/>
      <!-- <mass value="0.057654"/> -->
      <!--<inertia iyy="4.2412E-05" ixy="4.9927E-08" iyz="-9.8165E-09" ixx="3.7174E-05" ixz="1.1015E-05" izz="4.167E-05" />-->
      <!-- distribute iyy and izz equally between head and hokuyo_link given it's constrainted anyways -->
      <!-- tweak ixx of hokuyo so it's larger, 1/10th of head ixx. -->
      <!-- <inertia ixx="0.0004005974" ixy="4.9927E-08" ixz="1.1015E-05" iyy="0.002080106" iyz="-9.8165E-09" izz="0.001782985"/> -->
      <!-- Simulation only -->
      <mass value="0.000004"/>
      <inertia ixx="1.5e-2" ixy="0.0" ixz="0.0" iyy="1.5e-2" iyz="0.0" izz="1.5e-2"/>
    </inertial>
    <visual>
      <!--origin xyz="0.065774 -0.001163 -0.08809" rpy="0 0 0" /-->
      <!--origin xyz="0.045 -0.001163 -0.08809" rpy="-0.314 0 0" /-->
      <origin rpy="-0.314 0 0" xyz="0.045 -0.0261018277 -0.08342369"/>
      <geometry>
        <mesh filename="package://multisense_sl/meshes/head_camera.dae"/>
      </geometry>
      <material name="">
        <color rgba="0.72941 0.35686 0.023529 1"/>
      </material>
    </visual>
    <collision group="default">
      <origin rpy="0 0 0" xyz="0.01885 0 -0.02119"/>
      <geometry>
        <box size="0.08 0.06 0.04238"/>
      </geometry>
      <surface>
        <bounce restitution_coefficient="1.0" threshold="0.01"/>
      </surface>
    </collision>
    <collision group="other">
      <origin rpy="0 0 0" xyz="0.03 0 0.0235"/>
      <geometry>
        <cylinder length="0.047" radius="0.024425"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="head">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <!-- <kp>100000000.0</kp> -->
    <!-- <kd>0.1</kd> -->
    <maxVel value="0.6"/>
  </gazebo>
  <gazebo reference="hokuyo_link">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <!-- <kp>100000000.0</kp> -->
    <!-- <kd>0.1</kd> -->
    <maxVel value="0.6"/>
  </gazebo>
  <joint name="hokuyo_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.0446 0 0.0880"/>
    <parent link="head"/>
    <child link="hokuyo_link"/>
    <axis xyz="1 0 0"/>
    <dynamics damping="0.01" friction="0"/>
  </joint>
  <joint name="head_hokuyo_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0.03 0 0.015"/>
    <parent link="hokuyo_link"/>
    <child link="head_hokuyo_frame"/>
  </joint>
  <link name="head_hokuyo_frame">
    <!-- <inertial> -->
    <!-- <mass value="1e-5"/> -->
    <!-- collocate with parent link and remove mass from it -->
    <!-- <origin rpy="0 0 0" xyz="0.042428 0.0004084 0.0108165"/> -->
    <!-- <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/> -->
    <!-- </inertial> -->
  </link>
  <gazebo reference="head_hokuyo_frame">
    <turnGravityOff>true</turnGravityOff>
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1081</samples>
            <resolution>1</resolution>
            <min_angle>-2.356194</min_angle>
            <max_angle>2.356194</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/lidar_scan</topicName>
        <frameName>head_hokuyo_frame</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="left_camera_frame_joint" type="fixed">
    <!-- optical frame collocated with tilting DOF -->
    <origin xyz="0.0 0.035 -0.002"/>
    <parent link="head"/>
    <child link="left_camera_frame"/>
  </joint>
  <link name="left_camera_frame">
    <!-- <inertial> -->
    <!-- <mass value="1e-5"/> -->
    <!-- collocate with parent link and remove mass from it -->
    <!-- <origin xyz="-0.075493 0.035033383 0.02574"/> -->
    <!-- <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/> -->
    <!-- </inertial> -->
  </link>
  <joint name="left_camera_optical_frame_joint" type="fixed">
    <origin rpy="-1.5708 0.0 -1.5708" xyz="0 0 0"/>
    <parent link="left_camera_frame"/>
    <child link="left_camera_optical_frame"/>
  </joint>
  <link name="left_camera_optical_frame"/>
  <gazebo reference="left_camera_frame">
    <sensor name="stereo_camera" type="multicamera">
      <!-- see MultiSenseSLPlugin.h for available modes -->
      <update_rate>30.0</update_rate>
      <camera name="left">
        <!-- Spec sheet says 80deg X 45deg @ 1024x1024pix -->
        <horizontal_fov>1.445405955</horizontal_fov>
        <image>
          <width>1024</width>
          <height>1024</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.  
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1].
               The stddev value of 0.007 is based on experimental data 
               from a camera in a Sandia hand pointed at a static scene
               in a couple of different lighting conditions.  -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <camera name="right">
        <pose>0 -0.07 0 0 0 0</pose>
        <!-- Spec sheet says 80deg X 80deg @ 1024x1024pix. -->
        <horizontal_fov>1.445405955</horizontal_fov>
        <image>
          <width>1024</width>
          <height>1024</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.  
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1].
               The stddev value of 0.007 is based on experimental data 
               from a camera in a Sandia hand pointed at a static scene
               in a couple of different lighting conditions.  -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_multicamera.so" name="stereo_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>multisense_sl/camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>left_camera_optical_frame</frameName>
        <!--<rightFrameName>right_camera_optical_frame</rightFrameName>-->
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="right_camera_frame_joint" type="fixed">
    <origin xyz="0.0 -0.035 -0.002"/>
    <parent link="head"/>
    <child link="right_camera_frame"/>
  </joint>
  <link name="right_camera_frame">
    <!-- <inertial> -->
    <!-- <mass value="1e-5"/> -->
    <!-- collocate with parent link and remove mass from it -->
    <!-- <origin xyz="-0.075493 -0.034966617 0.02574"/> -->
    <!-- <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/> -->
    <!-- </inertial> -->
  </link>
  <joint name="right_camera_optical_frame_joint" type="fixed">
    <origin rpy="-1.5708 0.0 -1.5708" xyz="0 0 0"/>
    <parent link="right_camera_frame"/>
    <child link="right_camera_optical_frame"/>
  </joint>
  <link name="right_camera_optical_frame"/>
  <joint name="center_top_led_frame_joint" type="fixed">
    <origin xyz="0.01125 0.0 0.0105"/>
    <parent link="head"/>
    <child link="center_top_led_frame"/>
  </joint>
  <link name="center_top_led_frame">
    <!-- <inertial> -->
    <!-- <mass value="1e-5"/> -->
    <!-- collocate with parent link and remove mass from it -->
    <!-- <origin rpy="0 0 0" xyz="-0.064243 0.000033383 0.03824"/> -->
    <!-- <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/> -->
    <!-- </inertial> -->
  </link>
  <joint name="center_bottom_led_frame_joint" type="fixed">
    <origin xyz="0.01125 0.0 -0.0155"/>
    <parent link="head"/>
    <child link="center_bottom_led_frame"/>
  </joint>
  <link name="center_bottom_led_frame">
    <!-- <inertial> -->
    <!-- <mass value="1e-5"/> -->
    <!-- collocate with parent link and remove mass from it -->
    <!-- <origin rpy="0 0 0" xyz="-0.064243 0.000033383 0.01224"/> -->
    <!-- <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/> -->
    <!-- </inertial> -->
  </link>
  <joint name="left_led_frame_joint" type="fixed">
    <origin rpy="0 -0.15 0.53" xyz="-0.01443 0.07452 0.050346"/>
    <parent link="head"/>
    <child link="left_led_frame"/>
  </joint>
  <link name="left_led_frame">
    <!-- <inertial> -->
    <!-- <mass value="1e-5"/> -->
    <!-- collocate with parent link and remove mass from it -->
    <!-- <origin rpy="0 -0.15 0.53" xyz="-0.089923 0.074553383 0.078086"/> -->
    <!-- <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/> -->
    <!-- </inertial> -->
  </link>
  <joint name="right_led_frame_joint" type="fixed">
    <origin rpy="0 -0.15 -0.53" xyz="-0.01443 -0.07452 0.050346"/>
    <parent link="head"/>
    <child link="right_led_frame"/>
  </joint>
  <link name="right_led_frame">
    <!-- <inertial> -->
    <!-- <mass value="1e-5"/> -->
    <!-- collocate with parent link and remove mass from it -->
    <!-- <origin rpy="0 -0.15 -0.53" xyz="-0.089923 -0.074486617 0.07908"/> -->
    <!-- <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/> -->
    <!-- </inertial> -->
  </link>
  <gazebo>
    <plugin filename="libMultiSenseSLPlugin.so" name="multisense_plugin"/>
  </gazebo>
  <link name="head_imu_link">
    <!-- <inertial> -->
    <!-- <mass value="1e-5"/> -->
    <!-- collocate with parent link and remove mass from it -->
    <!-- <origin rpy="0 0 0" xyz="-0.122993 0.035033383 0.02774"/> -->
    <!-- <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/> -->
    <!-- </inertial> -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
  </link>
  <joint name="head_imu_joint" type="fixed">
    <parent link="head"/>
    <child link="head_imu_link"/>
    <!-- putting it at the same z-level as the stereo -->
    <origin rpy="0 0 0" xyz="-0.0475 0.035 0.0"/>
  </joint>
  <gazebo reference="head_imu_link">
    <!-- this is expected to be reparented to head with appropriate offset
         when head_imu_link is reduced by fixed joint reduction -->
    <!-- todo: this is working with gazebo 1.4, need to write a unit test -->
    <sensor name="head_imu_sensor" type="imu">
      <always_on>1</always_on>
      <update_rate>1000.0</update_rate>
      <imu>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters from Boston Dynamics
               (http://gazebosim.org/wiki/Sensor_noise):
                 rates (rad/s): mean=0, stddev=2e-4
                 accels (m/s/s): mean=0, stddev=1.7e-2
                 rate bias (rad/s): 5e-6 - 1e-5
                 accel bias (m/s/s): 1e-1
               Experimentally, simulation provide rates with noise of
               about 1e-3 rad/s and accels with noise of about 1e-1 m/s/s.
               So we don't expect to see the noise unless number of inner iterations
               are increased.

               We will add bias.  In this model, bias is sampled once for rates
               and once for accels at startup; the sign (negative or positive)
               of each bias is then switched with equal probability.  Thereafter,
               the biases are fixed additive offsets.  We choose
               bias means and stddevs to produce biases close to the provided
               data. -->
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </sensor>
  </gazebo>
  <!-- <joint name="head_joint" type="fixed">
      <origin xyz="0.315 0 0.593" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="head_root" />
    </joint> -->
  <joint name="head_joint" type="fixed">
    <origin xyz="0.315 0.0 0.593"/>
    <parent link="base_link" />
<!--      <parent link="ptu_mount_link" /> -->
    <child link="head_root"/>
  </joint>
  <!-- Inertia parameters -->
  <!-- This mass might be incorrect -->
  <!-- Kinematic model -->
  <!-- Properties from urcontrol.conf -->
  <!--
    DH for UR5:
    a = [0.00000, -0.42500, -0.39225,  0.00000,  0.00000,  0.0000]
    d = [0.089159,  0.00000,  0.00000,  0.10915,  0.09465,  0.0823]
    alpha = [ 1.570796327, 0, 0, 1.570796327, -1.570796327, 0 ]
    q_home_offset = [0, -1.570796327, 0, -1.570796327, 0, 0]
    joint_direction = [-1, -1, 1, 1, 1, 1]
    mass = [3.7000, 8.3930, 2.2750, 1.2190, 1.2190, 0.1879]
    center_of_mass = [ [0, -0.02561, 0.00193], [0.2125, 0, 0.11336], [0.11993, 0.0, 0.0265], [0, -0.0018, 0.01634], [0, 0.0018,0.01634], [0, 0, -0.001159] ]
  -->
  <!-- Arbitrary offsets for shoulder/elbow joints -->
  <!-- measured from model -->
  <!-- measured from model -->
  <!-- link lengths used in model -->
  <!--property name="shoulder_height" value="0.089159" /-->
  <!--property name="shoulder_offset" value="0.13585" /-->
  <!-- shoulder_offset - elbow_offset + wrist_1_length = 0.10915 -->
  <!--property name="upper_arm_length" value="0.42500" /-->
  <!--property name="elbow_offset" value="0.1197" /-->
  <!-- CAD measured -->
  <!--property name="forearm_length" value="0.39225" /-->
  <!--property name="wrist_1_length" value="0.093" /-->
  <!-- CAD measured -->
  <!--property name="wrist_2_length" value="0.09465" /-->
  <!-- In CAD this distance is 0.930, but in the spec it is 0.09465 -->
  <!--property name="wrist_3_length" value="0.0823" /-->
  <!-- manually measured -->
  <!-- manually measured -->
  <!-- manually measured -->
  <!-- manually measured -->
  <!-- manually measured -->
  <!-- Include the PTU and the stepper transmission, added by gtinchev-->
  <!-- stepper transmission -->
  <!-- Include the customised topPlace and the scaffolding at the back -->
  <joint name="base_link_to_topPlate" type="fixed">
    <parent link="base_link"/>
    <child link="top_plate_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.02 0.0 0.2503"/>
  </joint>
  <link name="top_plate_link">
    <visual>
      <geometry>
        <mesh filename="package://husky_description_rpg/urdf/accessories/meshes/short_top_plate.dae"/>
      </geometry>
      <material name="black">
        <color rgba="0.6 0.6 0.6 1"/>
      </material>
    </visual>
  </link>
  <joint name="top_plate_to_300Arch" type="fixed">
    <parent link="top_plate_link"/>
    <child link="300Arch"/>
    <origin rpy="0.0 0.0 3.14159" xyz="-0.28 0.0 0.15"/>
  </joint>
  <link name="300Arch">
    <visual>
      <geometry>
        <mesh filename="package://husky_description_rpg/urdf/accessories/meshes/300Arch_short.dae"/>
      </geometry>
      <material name="black">
        <color rgba="0.6 0.6 0.6 1"/>
      </material>
    </visual>
  </link>
  <!-- Base Size -->
  <!-- Wheel Mounting Positions -->
  <!-- Wheel Properties -->
  <!-- Base link is the center of the robot's bottom plate -->
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/base_link.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.061875"/>
      <geometry>
        <box size="0.9874 0.5709 0.12375"/>
      </geometry>
    </collision>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.185625"/>
      <geometry>
        <box size="0.78992 0.5709 0.12375"/>
      </geometry>
    </collision>
  </link>
  <!-- For conviencence, added by mfallon to have better director integration -->
  <link name="pelvis"/>
  <joint name="pelvis_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="pelvis"/>
  </joint>
  <!-- For conviencence, added by mfallon to have better director integration  -->  
  <!-- Base footprint is on the ground under the robot -->
  <link name="base_footprint"/>
  <joint name="base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 -0.14493"/>
    <parent link="base_link"/>
    <child link="base_footprint"/>
  </joint>
  <!-- Interial link stores the robot's inertial information -->
  <link name="inertial_link">
    <inertial>
      <mass value="33.455"/>
      <origin xyz="-0.08748 -0.00085 0.09947"/>
      <inertia ixx="0.6022" ixy="-0.02364" ixz="-0.1197" iyy="1.7386" iyz="-0.001544" izz="2.0296"/>
    </inertial>
  </link>
  <joint name="inertial_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="inertial_link"/>
  </joint>
  <!-- IMU Link is the standard mounting position for the UM6 IMU.-->
  <!-- Can be modified with environment variables in /etc/ros/setup.bash -->
  <link name="imu_link"/>
  <joint name="imu_joint" type="fixed">
    <origin rpy="0 -1.5708 3.1416" xyz="0.19 0 0.149"/>
    <parent link="base_link"/>
    <child link="imu_link"/>
  </joint>
  <gazebo reference="imu_link">
    </gazebo>
  <!-- Husky wheel macros -->
  <link name="front_left_wheel_link">
    <inertial>
      <mass value="2.637"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02467" ixy="0" ixz="0" iyy="0.02467" iyz="0" izz="0.04411"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1143" radius="0.17775"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="front_left_wheel_link">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="front_left_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="front_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.256 0.2854 0.03282"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <transmission name="front_left_wheel_trans" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="front_left_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="front_left_wheel">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="front_right_wheel_link">
    <inertial>
      <mass value="2.637"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02467" ixy="0" ixz="0" iyy="0.02467" iyz="0" izz="0.04411"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1143" radius="0.17775"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="front_right_wheel_link">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="front_right_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="front_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.256 -0.2854 0.03282"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <transmission name="front_right_wheel_trans" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="front_right_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="front_right_wheel">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="rear_left_wheel_link">
    <inertial>
      <mass value="2.637"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02467" ixy="0" ixz="0" iyy="0.02467" iyz="0" izz="0.04411"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1143" radius="0.17775"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="rear_left_wheel_link">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="rear_left_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="rear_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.256 0.2854 0.03282"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <transmission name="rear_left_wheel_trans" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="rear_left_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="rear_left_wheel">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="rear_right_wheel_link">
    <inertial>
      <mass value="2.637"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02467" ixy="0" ixz="0" iyy="0.02467" iyz="0" izz="0.04411"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1143" radius="0.17775"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="rear_right_wheel_link">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="rear_right_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="rear_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.256 -0.2854 0.03282"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <transmission name="rear_right_wheel_trans" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="rear_right_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="rear_right_wheel">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <!-- Spawn Husky chassis -->
  <link name="top_chassis_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/top_chassis.dae"/>
      </geometry>
    </visual>
  </link>
  <!-- Attach chassis to the robot -->
  <joint name="top_chassis_joint" type="fixed">
    <parent link="base_link"/>
    <child link="top_chassis_link"/>
  </joint>
  <!-- Spawn user rails -->
  <link name="user_rail_link">
    <visual>
      <geometry>
        <mesh filename="package://husky_description/meshes/user_rail.dae"/>
      </geometry>
    </visual>
  </link>
  <!-- Attach user rails to base link -->
  <joint name="user_rail" type="fixed">
    <origin rpy="0 0 0" xyz="0.272 0 0.245"/>
    <parent link="base_link"/>
    <child link="user_rail_link"/>
  </joint>
  <!-- Spawn front bumper link -->
  <link name="front_bumper_link">
    <visual>
      <geometry>
        <mesh filename="package://husky_description/meshes/bumper.dae"/>
      </geometry>
    </visual>
  </link>
  <!-- Attach front bumper -->
  <joint name="front_bumper" type="fixed">
    <origin rpy="0 0 0" xyz="0.48 0 0.091"/>
    <parent link="base_link"/>
    <child link="front_bumper_link"/>
  </joint>
  <!-- Spawn rear bumper link -->
  <link name="rear_bumper_link">
    <visual>
      <geometry>
        <mesh filename="package://husky_description/meshes/bumper.dae"/>
      </geometry>
    </visual>
  </link>
  <!-- Attach rear bumper -->
  <joint name="rear_bumper" type="fixed">
    <origin rpy="0 0 3.14159" xyz="-0.48 0 0.091"/>
    <parent link="base_link"/>
    <child link="rear_bumper_link"/>
  </joint>
  <!-- Hokuyo LIDAR -->
  <joint name="front_hokuyo_joint" type="fixed">
    <origin rpy="0.0 0.0 0.0" xyz="0.33 0.0 0.065"/>
    <parent link="top_plate_link"/>
    <child link="front_hokuyo_frame"/>
  </joint>
  <link name="front_hokuyo_frame">
    <inertial>
      <mass value="0.270"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="2.632e-4" ixy="0" ixz="0" iyy="2.632e-4" iyz="0" izz="1.62e-4"/>
    </inertial>
    <visual>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hokuyo_description/meshes/hokuyo_utm30lx/hokuyo_utm_30lx.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.0115"/>
      <geometry>
        <box size="0.058 0.058 0.087"/>
        <!--<mesh filename="package://hokuyo_description/meshes/hokuyo_utm30lx/hokuyo_utm_30lx.stl"/>-->
      </geometry>
    </collision>
  </link>
  <gazebo reference="front_hokuyo_frame">
    <sensor name="front_hokuyo" type="ray">
      <always_on>true</always_on>
      <update_rate>40.0</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>1081</samples>
            <resolution>1</resolution>
            <min_angle>-2.3561925</min_angle>
            <max_angle>2.3561925</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.08</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.004</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_front_hokuyo_controller">
        <topicName>horizontal_scan</topicName>
        <frameName>front_hokuyo_frame</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Sick LSM1XX -->
  <!-- <sick_lms1xx_mount prefix="base" topic="horizontal_scan"/> -->
  <!-- <joint name="laser_mount_joint" type="fixed"> -->
  <!-- Original Position -->
  <!--        <origin xyz="$(optenv HUSKY_LMS1XX_XYZ 0.2206 0.0 0.00635)" -->
  <!-- Directly Above the base link -->
  <!--        <origin xyz="$(optenv HUSKY_LMS1XX_XYZ -0.116 0.0 0.10)" -->
  <!-- Forward in a mountable location -->
  <!-- <origin xyz="$(optenv HUSKY_LMS1XX_XYZ 0.32 0.0 0.10)" rpy="$(optenv HUSKY_LMS1XX_RPY 0.0 0.0 0.0)" /> -->
  <!-- <parent link="top_plate_link" /> -->
  <!-- <child link="base_laser_mount" /> -->
  <!-- </joint> -->
  <!-- Include the PTU, added by gtinchev-->
  <link name="ptu_base_link">
    <collision>
      <origin xyz="0 0 0"/>
      <geometry>
        <box size="0.121 0.110 0.091"/>
        <!-- values taken from empiral evaluation of meshes -->
      </geometry>
      <surface>
        <bounce restitution_coefficient="1.0" threshold="0.01"/>
      </surface>
    </collision>
    <visual>
      <material name="ptu_body_color">
        <color rgba="0.3 0.3 0.3 1.0"/>
      </material>
      <geometry>
        <mesh filename="package://flir_ptu_description/urdf/meshes/d48_ptu_base.dae"/>
      </geometry>
      <origin xyz="0 0 0"/>
    </visual>
    <inertial>
      <mass value="0.05"/>
      <!-- Simulation only, so that the Multisense can work -->
      <inertia ixx="1.5e-2" ixy="0.0" ixz="0.0" iyy="1.5e-2" iyz="0.0" izz="1.5e-2"/>
      <!-- Real inertia -->
      <!-- <inertia
          ixx="9.371005432627199e-07" ixy="3.10026015620000e-16" ixz="-3.39562594304000e-09"
          iyy="9.56174224588800e-07" iyz="1.28326981000000e-18"
          izz="1.05415224328192e-06"/>  -->
      <!-- values taken from empiral evaluation of meshes -->
    </inertial>
  </link>
  <link name="ptu_pan_link">
    <collision>
      <origin xyz="0 0 0"/>
      <geometry>
        <box size="0.138 0.122 0.161"/>
        <!-- values taken from empiral evaluation of meshes -->
      </geometry>
      <surface>
        <bounce restitution_coefficient="1.0" threshold="0.01"/>
      </surface>
    </collision>
    <visual>
      <material name="ptu_body_color">
        <color rgba="0.3 0.3 0.3 1.0"/>
      </material>
      <geometry>
        <mesh filename="package://flir_ptu_description/urdf/meshes/d48_ptu_body.dae"/>
      </geometry>
      <origin xyz="0 0 0"/>
    </visual>
    <inertial>
      <mass value="0.05"/>
      <!-- Simulation only, so that the Multisense can work -->
      <inertia ixx="1.5e-2" ixy="0.0" ixz="0.0" iyy="1.5e-2" iyz="0.0" izz="1.5e-2"/>
      <!-- Real inertia -->
      <!-- <inertia
          ixx="5.541219836887040e-06" ixy="-3.017364750000000e-14" ixz="-8.729511591936000e-08"
          iyy="6.288134782320639e-06" iyz="-9.609700000000000e-22"
          izz="5.364587629117440e-06"/>  -->
      <!-- values taken from empiral evaluation of meshes -->
    </inertial>
  </link>
  <link name="ptu_tilt_link">
    <collision>
      <origin xyz="0 0 0"/>
      <geometry>
        <box size="0.053 0.136 0.072"/>
        <!-- values taken from empiral evaluation of meshes -->
      </geometry>
      <surface>
        <bounce restitution_coefficient="1.0" threshold="0.01"/>
      </surface>
    </collision>
    <visual>
      <material name="ptu_body_color">
        <color rgba="0.3 0.3 0.3 1.0"/>
      </material>
      <geometry>
        <mesh filename="package://flir_ptu_description/urdf/meshes/d48_ptu_mount.dae"/>
      </geometry>
      <origin xyz="0 0 0"/>
    </visual>
    <inertial>
      <mass value="0.05"/>
      <!-- Simulation only, so that the Multisense can work -->
      <inertia ixx="1.5e-2" ixy="0.0" ixz="0.0" iyy="1.5e-2" iyz="0.0" izz="1.5e-2"/>
      <!-- Real inertia -->
      <!-- <inertia 
          ixx="0.403229019996160e-06" ixy="0.000003637781440e-06" ixz="-0.000000000265620e-06"
          iyy="0.079419114782720e-06" iyz="0.000000000000384e-06"
          izz="3.654664847360000e-06"/>  -->
      <!-- values taken from empiral evaluation of meshes -->
    </inertial>
  </link>
  <link name="ptu_mount_link"/>
  <!-- There's an offset between the origin of the pan joint and the origin of 
         the overall device, which is between the mounting screws on its base. -->
  <joint name="ptu_pan" type="fixed">
    <parent link="ptu_base_link"/>
    <child link="ptu_pan_link"/>
    <origin xyz="0 0 0.092"/>
    <axis xyz="0 0 -1"/>
    <limit effort="30" lower="-2.775" upper="2.775" velocity="1.0"/>
    <dynamics damping="1.0" friction="10.0"/>
  </joint>
  <!-- The tilt joint -->
  <joint name="ptu_tilt" type="fixed">
    <parent link="ptu_pan_link"/>
    <origin xyz="0 0 0.13"/>
    <child link="ptu_tilt_link"/>
    <axis xyz="0 -1 0"/>
    <limit effort="30" lower="-0.82" upper="0.52" velocity="1.0"/>
    <dynamics damping="1.0" friction="10.0"/>
  </joint>
  <!-- Fixed joint to provide a convenient attachment point for accessories. -->
  <joint name="ptu_mount" type="fixed">
    <parent link="ptu_tilt_link"/>
    <child link="ptu_mount_link"/>
    <origin xyz="0 0 0.046"/>
  </joint>
  <!-- additional urdf elements for gazebo simulation with ros_control -->
  <gazebo reference="ptu_pan_link">
    <material>Gazebo/Grey</material>
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <kp>100000000.0</kp>
    <kd>1.0</kd>
    <maxVel>0.6</maxVel>
  </gazebo>
  <gazebo reference="ptu_tilt_link">
    <material>Gazebo/Grey</material>
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <kp>100000000.0</kp>
    <kd>1.0</kd>
    <maxVel>0.6</maxVel>
  </gazebo>
  <gazebo reference="ptu_mount_link">
    <material>Gazebo/Grey</material>
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <kp>100000000.0</kp>
    <kd>1.0</kd>
    <maxVel>0.6</maxVel>
  </gazebo>
  <transmission name="ptu_pan_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="ptu_pan">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="ptu_pan_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="ptu_pan">
    <provideFeedback>1</provideFeedback>
    <implicitSpringDamper>1</implicitSpringDamper>
  </gazebo>
  <transmission name="ptu_tilt_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="ptu_tilt">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="ptu_tilt_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="ptu_tilt">
    <provideFeedback>1</provideFeedback>
    <implicitSpringDamper>1</implicitSpringDamper>
  </gazebo>
  <!-- Create a fixed joint to connect the PTU to the rest of the robot -->
  <joint name="base_to_ptu_base" type="fixed">
    <parent link="base_link"/>
    <child link="ptu_base_link"/>
    <origin xyz="0.24 0 0.25"/>
  </joint>
  <!-- Include the SICK at the back, added by gtinchev -->
  <link name="sick_laser">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.05"/>
      <geometry>
        <box size="0.105 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="1.5708  0 -1.5708" xyz="0 0 -0.0325"/>
      <geometry>
        <!-- Origin of this mesh is the focal point of the LIDAR. -->
        <mesh filename="package://sick_description/urdf/meshes/sick_lms51x.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1.1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.00307156543804" ixy="0.0" ixz="0.0" iyy="0.00312849041527" iyz="0.0" izz="0.00196432421427"/>
    </inertial>
  </link>
  <gazebo reference="sick_laser">
    <turnGravityOff>true</turnGravityOff>
    <sensor name="sick_laser" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>25</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1141</samples>
            <resolution>1</resolution>
            <min_angle>-1.65806</min_angle>
            <max_angle>1.65806</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>81.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.001</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_laser">
        <topicName>sick_scan</topicName>
        <frameName>sick_laser</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="sick_laser_joint" type="fixed">
    <!-- Original Position -->
    <!--        <origin xyz="$(optenv HUSKY_LMS1XX_XYZ 0.2206 0.0 0.00635)" -->
    <!-- Directly Above the base link -->
    <!--        <origin xyz="$(optenv HUSKY_LMS1XX_XYZ -0.116 0.0 0.10)" -->
    <!-- Forward in a mountable location -->
    <origin rpy="0.0 -1.570795 3.14159" xyz="-0.115 0.0 0.095"/>
    <parent link="top_plate_link"/>
    <child link="sick_laser"/>
  </joint>
  <!-- used to generate the urdf from xacro for director -->
</robot>

