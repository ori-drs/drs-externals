package drc;

struct affordance_t
{

  int64_t utime;
  string otdf_type; //name of the otdf file
  string friendly_name; //informal, non-unique name for the affordance
  int32_t uid;      //affordance uid, should come from a free running cnt in aff store.
  // This field is not required for a NEW AFFORDANCE FIT. 
  // The aff store will figure out what the field is acc to its free running counter.
  
  int32_t map_id; // placeholder for future
  
  int16_t aff_store_control;
  const int16_t NEW=0, UPDATE=1, DELETE=2; //interruption for reset or halting
  
  // geometrical properties, 
  double origin_xyz[3];
  double origin_rpy[3];

  int32_t nparams;
  double params[nparams];
  string param_names[nparams];

  int32_t nstates;
  double states[nstates];
  string state_names[nstates];
  
  // Bounding Box Position
  // position and orientation is relative to origin_xyz/rpy
  // i.e. xyz/rpy == 0 means same as origin_xyz/rpy
  // If lwh are 0,0,0 - then none were given
  // lwh dimensions in bounding box frame i.e. forward/back, sideways, up/down
  double bounding_xyz[3];
  double bounding_rpy[3];
  double bounding_lwh[3]; 

  // Name of file containing model
  // This is an alternative to setting triangles and points in the affordance_plus_t message
  // may be a pcd file or ply
  string modelfile;
}
